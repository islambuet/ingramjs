<%- include('header', {currentMenu: 'statistics-daily', pageTitle: 'Daily Statistics'}); %>
    <div class="row m-0 mt-2">
        <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2">
            <div class="row m-0" id="big-chart-area">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-md-2">
                            <input type="text" class="form-control" id="from_date" placeholder="From date">
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control" id="to_date" placeholder="To date">
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary" id="btn_search">Filter</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" id="bcr-chart" style="height: 200px;">BCR Chart</div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-lg-12" id="tput-chart" style="height: 200px;">TPUT Chart</div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row m-0">
        <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2 mt-4">
            <table class="table table-sm table-bordered">
                <thead>
                <tr>
                    <th width="20%">Timestamp</th>
                    <th width="10%">Duration</th>
                    <th width="10%">Class</th>
                    <th width="10%">Location</th>
                    <th width="20%">Description</th>
                    <th width="20%">Variable Name</th>
                </tr>
                </thead>
                <tbody id="active_alarm_tbody">
                    <tr>
                        <td colspan="6">No active alarm to display</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<style type="text/css">
#sctooltip {
    position: fixed;
    display: none;
    width: 180px !important;
    color: #000;
    font-size: 0.85em;
    padding: 8px;
    white-space: nowrap;
    background-color: rgba(249, 249, 249, .85);    
    opacity: 0.85;
    box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
                0 2px 4px rgba(0,0,0,0.07), 
                0 4px 8px rgba(0,0,0,0.07), 
                0 8px 16px rgba(0,0,0,0.07),
                0 16px 32px rgba(0,0,0,0.07), 
                0 32px 64px rgba(0,0,0,0.07);
}
</style>
<div id="sctooltip"></div>
<%- include('footer', {currentMenu: 'statistics-daily'}); %>
<script src="js/jquery-bootstrap.js"></script>
<script src="js/nav.js"></script>
<script src="js/daterangepicker/moment.min.js"></script>
<script src="js/datepicker/bootstrap-datepicker.min.js"></script>
<script>
const Highcharts = require('highcharts/highstock')
require('highcharts/modules/exporting')(Highcharts);
require('highcharts/modules/export-data')(Highcharts);

let machine_mode = 9;
let alarm_class_to_names = {"0" : "Error", "1" : "Warning", "2" : "Message"};
let data_table;
let currentMousePos = { x: -1, y: -1 };
let statistics_started = 0;

jQuery(document).ready(function() {
    jQuery("#from_date").datepicker({
        autoclose: true,
        format: 'mm-dd-yyyy'
    });

    jQuery("#to_date").datepicker({
        autoclose: true,
        format: 'mm-dd-yyyy'
    });
    jQuery("#btn_search").click(function() {
        let from_date = jQuery("#from_date").val();
        let to_date = jQuery("#to_date").val();
        let to_timestamp = moment(to_date, "M/D/YYYY").unix();
        if(!to_timestamp){
            to_timestamp=moment().startOf("day").unix();
        }
        let from_timestamp = moment(from_date, "M-D-YYYY").unix();
        if(!from_timestamp){
            from_timestamp=(to_timestamp-24*60*60*90);

        }
        to_timestamp+=(24*60*60-1);
        ipcRenderer.send("get:StatisticsDaily", selected_machine,from_timestamp,to_timestamp);
    });

    jQuery("#ip_list_dropdown").change(function() {
        selected_machine = jQuery(this).val();

        if(selected_machine !== "") {
            let selected_machine_name = machine_list[selected_machine];
            jQuery("#display_machine_name").text(selected_machine_name);

            setInterval(() => {
                ipcRenderer.send("get:views", selected_machine, "statistics-daily");
            }, 60000);

        } else {
            jQuery("#display_machine_name").text("Select a machine");
            selected_machine = 0;
        }
        ipcRenderer.send("status:ActiveAlarms", selected_machine);
        ipcRenderer.send("get:views", selected_machine, "statistics-daily");
        $("#btn_search").trigger("click");
    });

});

let bcr_chart = Highcharts.chart('bcr-chart', {
    chart: {
        type: 'spline',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10,
        borderColor: '#D3D3D3',
        borderWidth: 1
    },

    time: {
        useUTC: false
    },

    title: {
        text: 'BCR Read Rate'
    },

    accessibility: {
        announceNewData: {
            enabled: true,
            minAnnounceInterval: 15000,
            announcementFormatter: function (allSeries, newSeries, newPoint) {
                if (newPoint) {
                    return 'New point added. Value: ' + newPoint.y;
                }
                return false;
            }
        }
    },

    xAxis: {
        type: 'datetime',
        tickInterval: 1000*60*60*24,
        labels: {
            // rotation: 90,
            // formatter: function() {
            //     //return Highcharts.dateFormat('%b-%e-%Y', this.value);
            //     //return moment.unix(this.value/1000).format("YYYY-MM-DD");
            // }
        }
    },

    yAxis: {
        title: {
            text: null
        },
        tickInterval: 20,
        tickWidth: 1,
        tickLength: 5,
        min: 0,
        max: 100,
        lineColor: '#C0C0C0',
        lineWidth: 1,
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
    },

    tooltip: {
        headerFormat: '<b>{series.name}</b><br/>',
        pointFormat: 'Date:{point.x:%Y-%m-%d}<br/>Rate:{point.y:.2f}%'
    },

    legend: {
        enabled: true
    },

    exporting: {
        enabled: true,
        buttons: {
            contextButton: {
                menuItems: ['downloadCSV', 'separator', 'downloadPDF', 'downloadPNG']
            }
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'BCR Read Rate',
        marker: {
            enabled: false
        },
        data: []
    }]
});
//
// let tput_chart = Highcharts.chart('tput-chart', {
//     chart: {
//         type: 'spline',
//         animation: Highcharts.svg, // don't animate in old IE
//         marginRight: 10,
//         borderColor: '#D3D3D3',
//         borderWidth: 1
//     },
//
//     time: {
//         useUTC: false
//     },
//
//     title: {
//         text: 'Tput'
//     },
//
//     accessibility: {
//         announceNewData: {
//             enabled: true,
//             minAnnounceInterval: 15000,
//             announcementFormatter: function (allSeries, newSeries, newPoint) {
//                 if (newPoint) {
//                     return 'New point added. Value: ' + newPoint.y;
//                 }
//                 return false;
//             }
//         }
//     },
//
//     xAxis: {
//         type: 'datetime',
//         tickInterval: 1000*60*60
//     },
//
//     yAxis: {
//         title: {
//             text: null
//         },
//         labels: {
//             format: '{value}'
//         },
//         tickInterval: 2000,
//         tickWidth: 1,
//         tickLength: 5,
//         min: 0,
//         max: 6000,
//         lineColor: '#C0C0C0',
//         lineWidth: 1,
//         plotLines: [{
//             value: 0,
//             width: 1,
//             color: '#808080'
//         }]
//     },
//
//     tooltip: {
//         headerFormat: '<b>{series.name}</b><br/>',
//         pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'
//     },
//
//     legend: {
//         enabled: true
//     },
//
//     exporting: {
//         enabled: true,
//         buttons: {
//             contextButton: {
//                 menuItems: ['downloadCSV', 'separator', 'downloadPDF', 'downloadPNG']
//             }
//         }
//     },
//
//     credits: {
//         enabled: false
//     },
//
//     series: [{
//         name: 'Tput',
//         marker: {
//                 enabled: false
//         },
//         data: []
//     }]
// });
//
// let pie_chart = Highcharts.chart('pie-chart', {
//     chart: {
//         plotBackgroundColor: null,
//         plotBorderWidth: null,
//         plotShadow: false,
//         type: 'pie',
//         borderColor: '#D3D3D3',
//         borderWidth: 1
//     },
//     credits: {
//         enabled: false
//     },
//     title: {
//         text: 'Total Products: 0'
//     },
//     tooltip: {
//         pointFormat: '<b>{point.percentage:.1f}%</b>'
//     },
//     accessibility: {
//         point: {
//             valueSuffix: '%'
//         }
//     },
//     navigation: {
//         buttonOptions: {
//             enabled: false
//         }
//     },
//     legend: {
//         align: 'right',
//         verticalAlign: 'middle',
//         layout: 'vertical',
//         itemMarginBottom:8,
//         symbolHeight: 12,
//         symbolWidth: 12,
//         symbolRadius: 0,
//         itemStyle: {
//             fontWeight: 'normal',
//             fontSize: '12px',
//             cursor: "pointer",
//             color: '#000'
//         }
//     },
//     plotOptions: {
//         pie: {
//             allowPointSelect: true,
//             cursor: 'pointer',
//             dataLabels: {
//                 enabled: true,
//                 format: '{point.percentage:.1f}'
//             },
//             showInLegend: true
//         }
//     },
//     series: [{
//         name: 'Sorting Codes',
//         colorByPoint: true,
//         data: []
//     }]
// });



ipcRenderer.on("render:statistics-daily", function(e, data_result) {
    //mode
    machine_mode = data_result['mode'];
    changeMachineNameBg(machine_mode);

});
ipcRenderer.on("get:StatisticsDaily", function(e,machineId, statistics) {
    //console.log(statistics)
    let statistics_by_day={};
    let bcr_chart_data = [];
    for (let id in statistics) {
        let timestamp_day=moment(moment.unix(statistics[id]['created_at_timestamp']).format("YYYY-MM-DD")).unix();
        if(!statistics_by_day[timestamp_day]){
            statistics_by_day[timestamp_day]=statistics[id];
        }
        else{
            for(let key in statistics[id]){
                if(!(['created_at_timestamp','created_at'].includes(key.toString()))){
                    statistics_by_day[timestamp_day][key]+=statistics[id][key];
                }
            }
        }
    }
    //console.log(statistics_by_day);
    for (let timestamp_day in statistics_by_day) {
        let total_read=Number(statistics_by_day[timestamp_day]['total_read']);
        let valid=Number(statistics_by_day[timestamp_day]['valid']);
        let bcr_read_rate = 0;
        if(total_read > 0) {
            bcr_read_rate = (valid / total_read) * 100;
        }
        bcr_chart_data.push({
            x:timestamp_day*1000,
            y: bcr_read_rate
        });
    }
    //console.log(bcr_chart_data)
    bcr_chart.series[0].setData(bcr_chart_data, true);


});
ipcRenderer.on("status:ActiveAlarms", function(e,machineId, activeAlarms) {
    //alarms
    let alarms_result = activeAlarms;
    jQuery("#active_alarm_tbody").empty();
    if(!jQuery.isEmptyObject(alarms_result)) {
        for (let k in alarms_result) {
            let related_alarm_gui_id = k;
            let related_alarm_info = alarms_result[k];

            let alarm_type = related_alarm_info['alarm_type'],
                alarm_description = related_alarm_info['description'],
                alarm_class = related_alarm_info['alarm_class'],
                alarm_location = related_alarm_info['location'],
                variable_name = related_alarm_info['variable_name'],
                timestamp = related_alarm_info['timestamp'],
                duration = related_alarm_info['duration'];

            timestamp = timeConverter(timestamp);

            let tr_html = '<tr>' +
                '<td>' + timestamp + '</td>'+
                '<td>' + secondsToDhms(duration) + '</td>'+
                '<td>' + alarm_class_to_names[alarm_class] + '</td>'+
                '<td>' + alarm_location + '</td>'+
                '<td>' + alarm_description + '</td>'+
                '<td>' + variable_name + '</td>'+
                '</tr>';

            jQuery("#active_alarm_tbody").append(tr_html);
        }
    }
    else {
        let tr_html = '<tr><td colspan="6">No active alarm to display</td></tr>';
        jQuery("#active_alarm_tbody").append(tr_html);
    }
});
</script>
</body>
</html>